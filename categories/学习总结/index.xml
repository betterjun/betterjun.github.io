<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Betterjun, 做更好的自己!</title>
    <link>http://betterjun.top/categories/%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/index.xml</link>
    <description>Recent content on Betterjun, 做更好的自己!</description>
    <generator>Hugo -- gohugo.io</generator>
    <atom:link href="http://betterjun.top/categories/%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>OSG笔记-1-编译安装</title>
      <link>http://betterjun.top/osg/osg%E7%AC%94%E8%AE%B0-1-%E5%AE%89%E8%A3%85%E7%BC%96%E8%AF%91/</link>
      <pubDate>Sun, 28 May 2017 23:12:00 +0800</pubDate>
      
      <guid>http://betterjun.top/osg/osg%E7%AC%94%E8%AE%B0-1-%E5%AE%89%E8%A3%85%E7%BC%96%E8%AF%91/</guid>
      <description>

&lt;h2 id=&#34;1-获取&#34;&gt;1. 获取&lt;/h2&gt;

&lt;h3 id=&#34;1-1-快速开始&#34;&gt;1.1. 快速开始&lt;/h3&gt;

&lt;p&gt;快速开始,对整个流程的介绍，见这里&lt;a href=&#34;http://www.openscenegraph.org/index.php/documentation/getting-started&#34;&gt;http://www.openscenegraph.org/index.php/documentation/getting-started&lt;/a&gt;。&lt;/p&gt;

&lt;h3 id=&#34;1-2-下载&#34;&gt;1.2. 下载&lt;/h3&gt;

&lt;p&gt;下载源码编译，
&lt;a href=&#34;http://www.openscenegraph.org/index.php/download-section/stable-releases&#34;&gt;http://www.openscenegraph.org/index.php/download-section/stable-releases&lt;/a&gt;。&lt;/p&gt;

&lt;h3 id=&#34;1-3-编译&#34;&gt;1.3. 编译&lt;/h3&gt;

&lt;p&gt;所有平台的编译入口在这里，&lt;a href=&#34;http://www.openscenegraph.org/index.php/documentation/platform-specifics&#34;&gt;http://www.openscenegraph.org/index.php/documentation/platform-specifics&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;windows平台编译方法在这里，&lt;a href=&#34;http://www.openscenegraph.org/index.php/documentation/platform-specifics/windows/37-visual-studio&#34;&gt;http://www.openscenegraph.org/index.php/documentation/platform-specifics/windows/37-visual-studio&lt;/a&gt;。&lt;/p&gt;

&lt;h3 id=&#34;1-4-获取样例数据&#34;&gt;1.4. 获取样例数据&lt;/h3&gt;

&lt;p&gt;在后面运行OSG的示例程序时，需要用到样例数据，在这里下载，&lt;a href=&#34;http://www.openscenegraph.org/index.php/download-section/data&#34;&gt;http://www.openscenegraph.org/index.php/download-section/data&lt;/a&gt;。&lt;/p&gt;

&lt;h3 id=&#34;1-5-执行样例程序&#34;&gt;1.5. 执行样例程序&lt;/h3&gt;

&lt;p&gt;执行样例程序，需要设置环境变量OSG_FILE_PATH，具体见，&lt;a href=&#34;http://www.openscenegraph.org/index.php/documentation/guides/user-guides/113-running-the-examples&#34;&gt;http://www.openscenegraph.org/index.php/documentation/guides/user-guides/113-running-the-examples&lt;/a&gt;。&lt;/p&gt;

&lt;h2 id=&#34;2-新建工程编译&#34;&gt;2. 新建工程编译&lt;/h2&gt;

&lt;p&gt;官方建议单独新建工程，不要和OSG的工程混在一起。同时将OpenSceneGraph\applications\osgViewer\osgViewer.cpp拷贝添加到新工程中，然后设置编译环境，验证编译通过。&lt;/p&gt;

&lt;h3 id=&#34;2-1-工程设置&#34;&gt;2.1. 工程设置&lt;/h3&gt;

&lt;p&gt;建议设置如下环境变量&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;OSG_ROOT points to the base of the OSG file structure (the directory that contains include, src etc. subdirectories)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;OSG_BIN_PATH = %OSG_ROOT%\bin&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;OSG_INCLUDE_PATH = %OSG_ROOT%\include&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;OSG_LIB_PATH = %OSG_ROOT%\lib&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;OSG_SAMPLES_PATH = %OSG_ROOT%\share\OpenSceneGraph\bin&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;OSG_FILE_PATH = ???\OpenSceneGraph-Data-X.X&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Then, add %OSG_BIN_PATH% and %OSG_SAMPLES_PATH% to your PATH environment variable. That way, not only can you run examples easily, but the latest DLLs will always be found. When starting an application, Windows looks for the required DLLs first in the executable&#39;s directory, then in the PATH.&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;然后再在新建的vs工程目录中，增加如下设置&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Properties - C/C++ - General - Additional Include Directories = $(OSG_INCLUDE_PATH)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Properties - C/C++ - Preprocessor - Preprocessor Definitions = WIN32;_WIN32;NDEBUG&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Properties - Linker - General - Additional Library Directories = $(OSG_LIB_PATH)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Properties - Linker - Input - Additional Dependencies = (any OSG library your project needs - for example: OpenThreads.lib osg.lib osgDB.lib osgFX.lib osgGA.lib osgManipulator.lib osgParticle.lib osgShadow.lib osgSim.lib osgTerrain.lib osgText.lib osgUtil.lib osgViewer.lib)&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;debug版本的库，需要在尾部上增加一个d，比如OpenThreadsd.lib osgd.lib osgDBd.lib osgFXd.lib osgGAd.lib osgManipulatord.lib osgParticled.lib osgShadowd.lib osgSimd.lib osgTerraind.lib osgTextd.lib osgUtild.lib osgViewerd.lib。&lt;/p&gt;

&lt;p&gt;上面几个设置，我自己采用的是INSTALL工程的输出目录，可以把debug和release自己手动再分开。&lt;/p&gt;

&lt;h3 id=&#34;2-2-配置选项说明&#34;&gt;2.2. 配置选项说明&lt;/h3&gt;

&lt;p&gt;对“解决方案配置”的选项，Release和MinSizeRel，Release是多线程编译，输出的二进制文件不能做到最小化，MinSizeRel是单线程编译，输出的文件可以做到最小化，但是非常慢。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>top命令学习汇总</title>
      <link>http://betterjun.top/linux_cmd/top%E5%91%BD%E4%BB%A4%E5%AD%A6%E4%B9%A0%E6%B1%87%E6%80%BB/</link>
      <pubDate>Sun, 01 Jan 2017 23:31:00 +0800</pubDate>
      
      <guid>http://betterjun.top/linux_cmd/top%E5%91%BD%E4%BB%A4%E5%AD%A6%E4%B9%A0%E6%B1%87%E6%80%BB/</guid>
      <description>

&lt;h2 id=&#34;常规用法&#34;&gt;常规用法:&lt;/h2&gt;

&lt;p&gt;查看cpu信息&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;root@iZwz9bruzaqhhifjeavouzZ:~# top
top - 23:43:11 up 51 days, 11:00,  1 user,  load average: 0.05, 0.05, 0.05
Tasks:  88 total,   1 running,  87 sleeping,   0 stopped,   0 zombie
%Cpu(s):  1.3 us,  1.0 sy,  0.0 ni, 97.3 id,  0.3 wa,  0.0 hi,  0.0 si,  0.0 st
KiB Mem:   1017712 total,   905048 used,   112664 free,   205412 buffers
KiB Swap:        0 total,        0 used,        0 free.   368316 cached Mem

  PID USER      PR  NI    VIRT    RES    SHR S %CPU %MEM     TIME+ COMMAND
    1 root      20   0   36672   4964    504 S  0.0  0.5   0:02.99 init
    2 root      20   0       0      0      0 S  0.0  0.0   0:00.00 kthreadd
    3 root      20   0       0      0      0 S  0.0  0.0   0:28.03 ksoftirqd/0
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;查看各个cpu使用情况，top后，再按1，&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[root@SE ~]# top
top - 00:04:12 up 12 days,  2:53,  1 user,  load average: 0.15, 0.07, 0.01
Tasks: 508 total,   1 running, 507 sleeping,   0 stopped,   0 zombie
Cpu0  :  0.0%us,  0.0%sy,  0.0%ni, 99.0%id,  1.0%wa,  0.0%hi,  0.0%si,  0.0%st
Cpu1  :  0.0%us,  0.0%sy,  0.0%ni,100.0%id,  0.0%wa,  0.0%hi,  0.0%si,  0.0%st
Cpu2  :  0.0%us,  0.0%sy,  0.0%ni,100.0%id,  0.0%wa,  0.0%hi,  0.0%si,  0.0%st
Cpu3  :  0.0%us,  0.0%sy,  0.0%ni,100.0%id,  0.0%wa,  0.0%hi,  0.0%si,  0.0%st
Cpu4  :  0.0%us,  0.0%sy,  0.0%ni,100.0%id,  0.0%wa,  0.0%hi,  0.0%si,  0.0%st
Cpu5  :  0.0%us,  0.0%sy,  0.0%ni,100.0%id,  0.0%wa,  0.0%hi,  0.0%si,  0.0%st
Cpu6  :  0.0%us,  0.0%sy,  0.0%ni,100.0%id,  0.0%wa,  0.0%hi,  0.0%si,  0.0%st
Cpu7  :  0.0%us,  0.0%sy,  0.0%ni,100.0%id,  0.0%wa,  0.0%hi,  0.0%si,  0.0%st
Cpu8  :  0.0%us,  0.0%sy,  0.0%ni,100.0%id,  0.0%wa,  0.0%hi,  0.0%si,  0.0%st
Cpu9  :  0.0%us,  0.0%sy,  0.0%ni,100.0%id,  0.0%wa,  0.0%hi,  0.0%si,  0.0%st
Cpu10 :  0.0%us,  0.0%sy,  0.0%ni,100.0%id,  0.0%wa,  0.0%hi,  0.0%si,  0.0%st
Cpu11 :  0.0%us,  0.0%sy,  0.0%ni,100.0%id,  0.0%wa,  0.0%hi,  0.0%si,  0.0%st
Cpu12 :  0.0%us,  0.0%sy,  0.0%ni,100.0%id,  0.0%wa,  0.0%hi,  0.0%si,  0.0%st
Cpu13 :  0.0%us,  0.0%sy,  0.0%ni,100.0%id,  0.0%wa,  0.0%hi,  0.0%si,  0.0%st
Cpu14 :  0.0%us,  0.0%sy,  0.0%ni,100.0%id,  0.0%wa,  0.0%hi,  0.0%si,  0.0%st
Cpu15 :  0.0%us,  0.0%sy,  0.0%ni,100.0%id,  0.0%wa,  0.0%hi,  0.0%si,  0.0%st
Cpu16 :  0.0%us,  0.3%sy,  0.0%ni, 99.7%id,  0.0%wa,  0.0%hi,  0.0%si,  0.0%st
Cpu17 :  0.0%us,  0.0%sy,  0.0%ni,100.0%id,  0.0%wa,  0.0%hi,  0.0%si,  0.0%st
Cpu18 :  0.0%us,  0.0%sy,  0.0%ni,100.0%id,  0.0%wa,  0.0%hi,  0.0%si,  0.0%st
Cpu19 :  0.3%us,  0.0%sy,  0.0%ni, 99.7%id,  0.0%wa,  0.0%hi,  0.0%si,  0.0%st
Cpu20 :  0.0%us,  0.0%sy,  0.0%ni,100.0%id,  0.0%wa,  0.0%hi,  0.0%si,  0.0%st
Cpu21 :  0.0%us,  0.0%sy,  0.0%ni,100.0%id,  0.0%wa,  0.0%hi,  0.0%si,  0.0%st
Cpu22 :  0.0%us,  0.0%sy,  0.0%ni,100.0%id,  0.0%wa,  0.0%hi,  0.0%si,  0.0%st
Cpu23 :  0.0%us,  0.0%sy,  0.0%ni,100.0%id,  0.0%wa,  0.0%hi,  0.0%si,  0.0%st
Mem:  32837188k total,  3460832k used, 29376356k free,  1142872k buffers
Swap: 32767992k total,        0k used, 32767992k free,  1340076k cached

   PID USER      PR  NI  VIRT  RES  SHR S %CPU %MEM    TIME+  COMMAND
  2160 root      20   0     0    0    0 S  0.3  0.0   0:20.46 kondemand/16
     1 root      20   0 19224 1544 1252 S  0.0  0.0   0:03.73 init
     2 root      20   0     0    0    0 S  0.0  0.0   0:00.02 kthreadd
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;查看指定进程的所有线程使用cpu情况，top -Hp pid，&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[root@SE ~]# top -Hp 1
top - 00:05:36 up 12 days,  2:54,  1 user,  load average: 0.04, 0.05, 0.00
Tasks:   1 total,   0 running,   1 sleeping,   0 stopped,   0 zombie
Cpu(s):  0.0%us,  0.0%sy,  0.0%ni,100.0%id,  0.0%wa,  0.0%hi,  0.0%si,  0.0%st
Mem:  32837188k total,  3459404k used, 29377784k free,  1142880k buffers
Swap: 32767992k total,        0k used, 32767992k free,  1340088k cached

   PID USER      PR  NI  VIRT  RES  SHR S %CPU %MEM    TIME+  COMMAND
     1 root      20   0 19224 1544 1252 S  0.0  0.0   0:03.73 init
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;top后，再分别按PTM，按CPU、时间、内存降序排列&lt;/p&gt;

&lt;p&gt;参考资料:&lt;/p&gt;

&lt;p&gt;各列详细说明，&lt;a href=&#34;http://www.cnblogs.com/me115/p/3842081.html&#34;&gt;http://www.cnblogs.com/me115/p/3842081.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;各列详细说明，外加部分使用案例 &lt;a href=&#34;http://www.cnblogs.com/peida/archive/2012/12/24/2831353.html&#34;&gt;http://www.cnblogs.com/peida/archive/2012/12/24/2831353.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;各列详细说明，以及其他一些有用工具，&lt;a href=&#34;http://linuxtools-rst.readthedocs.io/zh_CN/latest/tool/top.html&#34;&gt;http://linuxtools-rst.readthedocs.io/zh_CN/latest/tool/top.html&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>ps命令学习汇总</title>
      <link>http://betterjun.top/linux_cmd/ps%E5%91%BD%E4%BB%A4%E5%AD%A6%E4%B9%A0%E6%B1%87%E6%80%BB/</link>
      <pubDate>Sun, 01 Jan 2017 23:30:28 +0800</pubDate>
      
      <guid>http://betterjun.top/linux_cmd/ps%E5%91%BD%E4%BB%A4%E5%AD%A6%E4%B9%A0%E6%B1%87%E6%80%BB/</guid>
      <description>&lt;p&gt;常用用法，查看进程cpu、占用内存、虚拟内存信息&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[root@SE ~]# ps axu
USER        PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND
root          1  0.0  0.0  19224  1544 ?        Ss    2016   0:03 /sbin/init
root          2  0.0  0.0      0     0 ?        S     2016   0:00 [kthreadd]
root          3  0.0  0.0      0     0 ?        S     2016   0:03 [migration/0]
root          4  0.0  0.0      0     0 ?        S     2016   0:06 [ksoftirqd/0]
root          5  0.0  0.0      0     0 ?        S     2016   0:00 [migration/0]
root          6  0.0  0.0      0     0 ?        S     2016   0:01 [watchdog/0]

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;查看进程启动精确时间。ps -ef可以看到进程的启动时间，但是这个时间如果超过24小时就只能看到年份了，使用如下命令可以看到精确的启动时间。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[root@store02-2sn ~]# ps -eO lstart|grep se-
 63138 Wed Dec 21 10:30:39 2016 S ?        2-01:10:38 /opt/se/modules/se-lte2db/se-lte2db
 63276 Wed Dec 21 10:30:49 2016 S ?        16:32:35 /opt/se/modules/se-fileproc/se-fileproc
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>